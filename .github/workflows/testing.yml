---
name: PHPUnit

on:
  pull_request:
    branches:
      - main

jobs:
  PHPUnit:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        drupal-version: ['9.4']
        php-version: ['7.4', '8.0']
        experimental: [false]
        include:
          - drupal-version: '9'
            php-version: '7.4'
            experimental: true
          - drupal-version: '9'
            php-version: '8.1'
            experimental: true
          - drupal-version: '9.4'
            php-version: '8.1'
            experimental: true
    continue-on-error: ${{ matrix.experimental }}
    container:
      image: drupal:${{ matrix.drupal-version }}-php${{ matrix.php-version }}
      ports:
        - 80
    env:
      DRUPAL_EXTENSION_NAME: flysystem_ocfl
      COMPOSER_PACKAGE_NAME: discoverygarden/flysystem_ocfl
      # XXX: Installation of the module is presently a little funky...
      # "require-dev" doesn't quite do the trick, as it's only usable at the
      # root-project level.
      COMPOSER_PACKAGE_PREREQUISITES: ''
      # Patches need to be publically accessible, presently (so no private PRs,
      # at present).
      COMPOSER_PATCHES: |-
        {
          "drupal/core": {
            "Referencable unpublished nodes": "https://www.drupal.org/files/issues/2022-06-17/2845144-67.patch"
          }
        }
      POSTGRES_DB: drupal
      POSTGRES_USER: drupal
      POSTGRES_PASSWORD: drupal
      DRUPAL_ROOT: /opt/drupal
      DRUPAL_WEB_ROOT: /opt/drupal/web
      APACHE_USER: www-data
      APACHE_GROUP: www-data
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Grab additional packages
        run: |
          # postgresql-client required for drush's site installation process
          # git required to grab repo as repo via actions/checkout
          apt update
          apt install -y postgresql-client git jq
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Get project hash
        id: composer-project-hash
        working-directory: ${{ env.DRUPAL_ROOT }}
        run: |
          set -eux
          HASH=$(jq --raw-output ".[\"content-hash\"]" < composer.lock)
          echo "HASH=$HASH" >> $GITHUB_OUTPUT
      - name: Cache Composer dependencies
        uses: actions/cache@v2
        with:
          path: /tmp/composer-cache
          key: ${{ runner.os }}-${{ steps.composer-project-hash.outputs.HASH }}
      - name: Misc setup
        working-directory: ${{ env.DRUPAL_ROOT }}
        env:
          COMPOSER_HOME: /tmp/composer-cache
        run: |
          set -eux

          # XXX: When running inside a container, it skips the entry point,
          # so... let's kick off the Apache process.
          apache2ctl start

          # Install Drush.
          composer require "drush/drush:^10"
          # Install the site.
          drush --uri=http://localhost --yes -v site:install minimal --db-url="pgsql://${{ env.POSTGRES_USER }}:${{ env.POSTGRES_PASSWORD }}@postgres/${{ env.POSTGRES_DB}}"

          # Configure access and install our module.
          echo '${{ secrets.PRIVATE_PACKAGIST_AUTH_ACCESS }}' > auth.json

          # Setup our repos.
          # XXX: We don't want the default Drupal thing first (it'll be readded
          # later).
          composer config --unset repositories.0

          # We need to specify things in the _opposite_ order than what we want.
          # XXX: Some repos are in an odd state, between different repos... so
          # let's throw 'em in.
          composer config --json -- repositories.islandora \
            '{"type": "git", "url": "https://github.com/Islandora/islandora.git"}'

          composer config --json -- repositories.drupal \
            '{"type": "composer", "url": "https://packages.drupal.org/8", "canonical": false}'
          composer config --json -- repositories.private_packagist \
            '{"type": "composer", "url": "https://repo.packagist.com/discoverygarden/", "canonical": false}'
          composer config --json -- repositories.actions \
            "{\"type\": \"path\", \"url\": \"$GITHUB_WORKSPACE\"}"
          composer config -- repo.packagist false

          # Dump out the configured repositories.
          composer config repositories

          if [ -n '${{ env.COMPOSER_PATCHES }}' ] ; then
            composer config -- allow-plugins.cweagans/composer-patches true
            composer config --json --merge -- extra.patches '${{ env.COMPOSER_PATCHES }}'
            composer require "cweagans/composer-patches:^1.7"
          fi

          composer config minimum-stability dev
          composer require ${{ env.COMPOSER_PACKAGE_PREREQUISITES }} \
            "${{ env.COMPOSER_PACKAGE_NAME }}:dev-main#${{ github.sha }}"

          # Install the module.
          drush --uri=http://localhost --yes -v en ${{ env.DRUPAL_EXTENSION_NAME }}

          # XXX: Trying to run PHPUnit complains w/o prophecy-phpunit:
          # > Drupal requires Prophecy PhpUnit when using PHPUnit 9 or greater.
          # > Please use 'composer require --dev phpspec/prophecy-phpunit:^2' to
          # > ensure that it is present.
          # ... so let's add it as well...
          composer require --dev --update-with-all-dependencies "drupal/core-dev:^${{ matrix.drupal-version }}" phpspec/prophecy-phpunit:^2

          chown -R $APACHE_USER:$APACHE_GROUP web/sites web/modules web/themes
      - name: Run PHPUnit tests (base)
        env:
          SIMPLETEST_BASE_URL: http://127.0.0.1
          SIMPLETEST_DB: "pgsql://${{ env.POSTGRES_USER }}:${{ env.POSTGRES_PASSWORD }}@postgres/${{ env.POSTGRES_DB}}"
        working-directory: ${{ env.DRUPAL_ROOT }}
        continue-on-error: ${{ matrix.experimental }}
        run: |
          su "$APACHE_USER" -s /bin/bash <<-EOS
          phpunit "--bootstrap=$DRUPAL_WEB_ROOT/core/tests/bootstrap.php" --group $DRUPAL_EXTENSION_NAME --verbose "$GITHUB_WORKSPACE"
          EOS
      - name: Run PHPUnit tests (reporting deprecations)
        env:
          SIMPLETEST_BASE_URL: http://127.0.0.1
          SIMPLETEST_DB: "pgsql://${{ env.POSTGRES_USER }}:${{ env.POSTGRES_PASSWORD }}@postgres/${{ env.POSTGRES_DB}}"
        working-directory: ${{ env.DRUPAL_ROOT }}
        # XXX: A number of deprecation things in modules pulled in make a mess
        # presently... so let's just report 'em, for now.
        continue-on-error: true
        run: |
          su "$APACHE_USER" -s /bin/bash <<-EOS
          phpunit "--configuration=$DRUPAL_WEB_ROOT/core/phpunit.xml.dist" --group $DRUPAL_EXTENSION_NAME --verbose "$GITHUB_WORKSPACE"
          EOS
